1.0.2.0 Migration to Git
1.0.2.1 Fix null reference in Json Object GetProperty
1.0.3.0 Restructured to use Rest.Model (making clearer which classes are controllers and which are part of the the (internal) model). Left controllers in the Rest namespace for compatibility with FitSharp tests
1.0.3.2 Added ContentHandler.PropertySetOfContainsValueLike
1.0.3.3 Implemented ReSharper suggestions
2.0.0 Introduced semantic versioning
2.1.0 Prepared for publishing on GitHub; included Echo function in RestTests assembly; increased code coverage to 98%
2.1.1 Replaced FixtureDocumentation dictionary by [Documentation] attribute
2.2.0 Added EvaluateOn to replace Evaluate and switched parameters; added ClassesIn to replace GetClasses. Deprecated Evaluate and GetClasses.
2.3.0 Introduced more explicit support for cookies: Cookies and CookieDomain entries in RestConfig, RequestCookies, ResponseCookies and 
      PropertyOfResponseCookie in RestTester. Cleaned up tests for JsonObjects and added test for DocumentationAttribute.
2.4.0 Fixed serialization issues in JSON objects (dates, arrays, objects). Added capability to create JSON objects from XML strings, and XML objects from JSON strings. Added VersionInfo in RestTester.
      Introduced mechanism to return JSON or XML objects in GetProperties, which involves a change in the way JSON Arrays (now with quotes) and Objects (no longer empty) are represented in the results.
	  This may break tests in obscure cases, but makes the behavior more consistent (it is now possible to extract parts of JSON and XML objects). Fixed line break issue in CookieList.
2.4.1 Migrated to Roslyn based code analysis, fixed (or suppressed, with justification) issues and reduced complexity of some methods to get all below 8.
2.4.2 Added SecurityProtocol in RestConfig to allow overruling of security protocol to be used, and set default to Tls12.
      Used https instead of http in a number of tests to identify future issues with that earlier.
2.5.1 Added LoadObjectFrom and SaveObjectTo in ContentHandler to enable persisting objects to file and loading them back
2.5.2 Added many documentation comments. TODO: remove [Documentation] atributes after updating FixtureExplorer to use XML documentation.
2.5.3 Removed [Documentation] attributes
2.6.0 Introduced gzip/deflate support, introduced ObjectFrom* to replace CreateObjectFrom* over time, added ObjectFromPropertyOf to allow extracting properties as new objects.
2.6.1 Added boolean configuration entry "TrimWhitespace" to cater for JSON payloads that may have whitespace around the values (false by default). 
2.6.2 Made TrimWhitespace work for XML and TEXT payloads as well, and now works with Evaluate too.