!|table:Rest Config                 |
|DefaultAccept     |application/json|
|DefaultContentType|application/json|
|DefaultUserAgent  |FitNesseRest    |
|DefaultMatcher    |Json            |
|Encoding          |iso-8859-1      |
|Headers                            |!-header1:value1
header2:value2-!|
|ContentTypeMapping|!-application/xml:XML
application/json:JSON
text/plain:TEXT
default:JSON-!|

|Scenario|Send         |command|to|resource|expect code|responseCode|
|Send    |@command     |to     |@resource                           |
|check   |response code|@responseCode                               |
|show    |request uri                                               |
|show    |response                                                  |

Post some data to a test service, and capture its response into a JSon object. Also show some response headers and the request body (handy for debugging)

!|script|RestTester   |http://restfixturetest.azurewebsites.net/api/     |
|check  |request uri  |null                                              |
|send   |DELETE       |to|products  |expect code|204                     |
|Send   |GET          |to|products  |expect code|200                     |
|Send   |POST         |to|products  |with Body  |{ "id":1, "name":"test"}|
|check  |response code|201                                               |
|show   |request uri                                                     |
|show   |response                                                        |
|Send   |PUT          |to|products/1|with Body  |{ "name":"test2"}       |
|check  |response code|200                                               |
|show   |request uri                                                     |
|show   |response                                                        |

!|script                                                                    |
|Set Request Body|{"id":123, "name":"Testdata for Rest Test" }              |
|Send            |POST                        |to  |products|expect code|201|
|$id1=           |value from response matching|Id                           |
|check           |echo                        |$id1|123                     |

!|script                                                                    |
|Set Request Body|{"name":"Testdata for Rest Test", "price":33 }            |
|Send            |POST                        |to  |products|expect code|201|
|$id2=           |value from response matching|Id                           |
|check           |echo                        |$id1|!=$id2                  |

!|script                                                                    |
|Set Request Body|{"name":"Testdata for Rest Test", "price":33 }            |
|Send            |POST                        |to  |products|expect code|201|
|$id3=           |value from response matching|Id                           |
|check           |echo                        |$id3|!=$id2                  |

!|script                                                                             |
|Send        |HEAD                      |to            |products     |expect code|200|
|$lengthHead=|value from response header|Content-Length|matching     |(\d+)          |
|Send        |GET                       |to            |products     |expect code|200|
|$lengthGet= |value from response header|Content-Length|matching     |(\d+)          |
|check       |echo                      |$lengthHead   |$lengthGet                   |
|send        |DELETE                    |to            |products/$id1|expect code|200|
|send        |DELETE                    |to            |products/$id2|expect code|200|
|send        |DELETE                    |to            |products/$id3|expect code|200|
|Send        |GET                       |to            |products     |expect code|200|


We have the ability to show a few headers, all the headers, or all except some.
We can also use regular expressions (regex) to parse response values.

|script                                                                    |
|show  |response                                                           |
|show  |response headers          |[Content-Length, Content-Type]          |
|show  |response headers without  |[Content-Type]                          |
|show  |request headers  without  |[Cookie]                                |
|show  |value from request header |Accept        |matching|application/(.+)|
|show  |get request body                                                   |
|$size=|value from response header|Content-Length|matching|(\d+)           |



|Script                        |
|show|response code            |
|show|response code description|

A Put command updates an existing element. Do that, and then check if the element was indeed updated.
Then delete it, and show the response (which should now no longer contain the deleted element).

!|script                                                       |
|Send |Put          |to|products/1|with Body  |{ "name":"test"}|
|check|response code|200                                       |
|show |response                                                |
|Send |DELETE       |to|products/1|expect code|200             |
|check|response     |                                          |


Delete an object that we already deleted, and check whether that is flagged.
We do this by parsing the response via a Json query.
Then, check whether sending an unsupported command (in this case HEAD) is flagged as well.

!|script                                  |
|Send|DELETE|to|products/1|expect code|404|


